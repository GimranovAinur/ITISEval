'225397 |@words попробовать привести пример когда:2 бывать нужный spring custom scope:18 компания b2b saas мы бежать:2 таймер некий:3 долгий процесс:9 для:3 каждый:5 клиент:4 есть какой:5 свойство:2 имя тип:3 подписка ранний делать наш:5 сервис:3 prototype:4 бинами передавать они конструктор весь:9 необходимый запустить flow:2 иметься ввиду логический job service:4 public:27 class:15 servicea:12 private:12 customer:34 reloadtype:27 serviceb:12 autowired:4 applicationcontext context:18 final:9 this:4 postconstruct void:14 init getbean:4 dosomethinginteresting:4 dosomthingwithcustomer:4 dosomethingboring:4 fullreaload:2 это:4 неудобно один:3 можно ошибиться число или параметр при:2 создание:2 бин:8 второе много boilerplate код поэтому сделать свой идея вот чем создавать контекст:5 объект хранить:2 информация тот:4 сейчас что:4 нужно:2 знать он:2 threadlocal:6 мой:2 этот туда инжекть храниться список уже:2 создать:3 биновый:4 чтобы:3 создаваться:3 только:2 раз:2 заканчиваться очищать собираться garbage collector' заметить обязать имплементировать:2 интерфейс:2 инжектить итак объявлять xml:2 bean:3 id= customerscope:4 class=:2 com org springframework beans:2 factory config customscopeconfigurer property:2 name= scopes map:2 entry key= value-ref= implements:2 override:6 object:5 get:2 string:9 name:6 objectfactory:3 customercontext:13 resolve:4 result:7 null:4 getobject icustomerscopebean:7 syncscopedbean:2 setcontext:3 oldbean:3 setbean return:6 remove:2 removebean protected:3 customercontextthreadlocal:4 getcustomercontext:2 registerdestructioncallback runnable callback resolvecontextualobject key getconversationid tostring как:2 видеть рамка использоваться инстанс действительно стандартный новое singleton сам браться static:5 new:2 setsynccontext:4 set clear oстаться абстрактный реализация interface abstractcustomerscopebean:3 getcustomer getreloadtype после выглядеть намного красивый extends:2 мочь возникнуть вопрос использовать если:2 вызывать асинхронный метод:2 главный дерево синхронно тогда быть:2 работать:2 корректно нибыть запускаться async страшно так неплохо также написать тест который проверить реализовать наоборот contextconfiguration locations classpath loader genericxmlcontextloader runwith springjunit4classrunner customerbeanscopetest abstractapplicationcontext test testscopebeans throws classnotfoundexception configurablelistablebeanfactory beanfactory:3 getbeanfactory beandefinitionnames:2 getbeandefinitionnames for beandef:2 beandefinition def:3 getbeandefinition getscope beanclassname:5 getbeanclassname continue aclass:3 forname isassignablefrom:2 asserttrue:2 should:2 have 'customer equals:2 implement 'icustomerscopebean