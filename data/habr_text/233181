'233181 |@words этот:2 статья:2 собрать вместе aiorest:3 jinja2:2 angular:7 gulp:7 bower:5 nginx:3 результат получить авто-перезапуск:2 сервер:4 при:2 изменение:2 python-код jinja-шаблон сборка:3 минификация:2 автоматический пересборка клиентский:5 js-код начать главный как:3 пользоваться:2 затем:2 дробный описать:2 некоторый:2 момент реализация если вы:2 лёгкий читать код:3 вот ссылка репа установка git:3 clone github com:5 imbolc aiorest-angular-template:2 sudo:2 npm:2 install:3 bin:3 buildenv configure добавлять:4 etc hosts 127 aio-angular:2 запускать разработчик готовый:2 теперь можно открывать браузер:2 http использование:2 просто:2 обработчик handlers:5 урла:3 urls:10 раскладывать папка:2 client:7 удобный для:6 структура конфигурацияaiorest уметь:2 ничто кроме отдавать json поэтому:2 отдача статика быть:5 использовать:5 шаблон:2 он:2 конфига:5 другой настройка находиться:3 cfg:7 там файлик:3 питон-зависимость pipreq txt питон-часть приложение:2 init:3 local последний джанга-стайл перезаписывать специфичный текущий конфигурация:2 первое хранить хороший один:2 место так:2 генерировать потом подсовывать ангуляр:4 вид value:2 templates config:2 module:2 'app:3 'cfg config_tojson_safe мудрость который:4 всячески рекомендовать прочтение real-world best practices for:2 building apps without browserify:2 require:2 вкратце ангулярый подходить:2 мы нужный большой часть функционал потому что уже:2 есть:2 модуль итак современный замена grunt промежуточный файл:3 иметь более приятный синтаксис описание задача аналогичный куча плагин смотреть gulpfile task:3 'js function:3 src 'client:2 app:3 pipe:7 plumber:2 sourcemaps:4 concat:2 ngannotate:2 uglify:2 write:2 dest static:7 build source map позволять консоль видеть ошибка:2 лог-сообщение нумерация строка исходный копировать весь нельзя взять минифицировать ангуляр-код dependency annotation перехватывать ход всего это:2 чем давать падать авто-персборка сервераgulp 'dev server:7 shell 'nodemon exec var env python ext html:3 ignore дада nodemon перезапускать только node серверный:2 начинаться import:7 asyncio:2 lib:2 logging:2 prepare:3 setup log file urls=urls render 'index restserver hostname='127 url:3 add loop:5 get:3 event run:2 until complete create make handler '127 port try forever except keyboardinterrupt pass здесь настраивать логирование подготавливать выше:2 рендерим пока единственный:2 немой логика debug script:8 src=:4 angular-resource:3 else ajax:4 googleapis:2 libs:2 angularjs:2 0-beta:2 min:2 endif переопределить обозначение управлять конструкция такой далее создавать aiorest-сервер 'get:2 hello:10 name:4 'hello:2 api аякс браузерно кодe хендлера урлов def request:2 matchdict 'name 'world message:2 format return:2 'message angular-код описывать world пожалуй обратить внимание готовить svc service 'hellosvc resource:2 this:2 fetchgreeting apply arguments