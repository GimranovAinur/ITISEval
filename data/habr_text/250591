'250591 |@words история библиотека:5 finch:17 начаться около год назад:2 подвал конфеттин где пытаться сделать rest:2 api:8 finagle:5 смотреть что:5 finagle-http:3 сам себя:2 очень:4 хороший инструмент:2 стать:3 ощущать острый нехватка более:3 богатый:2 абстракциия кроме:3 тот:4 мы быть:5 особый требование это:8 самый:2 абстракция:3 они:5 должный:2 неизменяемый immutable легко композируть composable тоже время:4 простой:4 как:8 функция:4 так:2 появиться который:15 представлять:2 тонкий слой тип:12 поверх делать:2 разработка http:8 micro_nano -сервис приятный шесть месяц выйти:2 один:6 стабильный версия:2 буквально день лично считать:2 pre-alpha компания три:2 ещё официальный список mesosphere shponic globo com начать использовать:11 production некоторый:4 даже активный контрибьютор этот:2 пост:2 рассказывать кит построить router:11 requestreader:26 responsebuilder:5 пакет:5 route:6 реализовать:2 combinators:3 позволять:5 строить:2 бесконечный количество роутер:8 комбинировать примитивный доступный:2 коробка:2 такой:7 подход parser scodec смысл option:4 принимать:2 абстрактный маршрут:5 возвращать:4 остаться извлечь:2 значение:9 иной слово some случай:6 успех если:7 запрос:9 удаться смаршрутизировать есть:7 всего:3 базовый int:18 long:3 string:12 boolean:2 роутеры:3 извлекать:3 просто сопоставлять он:4 образец например:3 для:12 метод:5 get:6 post:2 следующий:3 пример:6 показывать:3 композиция:2 роутереть маршрутизировать вид users_user целое обратить внимание оператор:2 или:5 andthen помощь:7 последовательно композировать:3 два:6 также orelse термин логический val:18 users:7 user:22 требоваться несколько можно:6 специальный:2 case:8 class:5 ticket:3 userid ticketid tickets map:3 сервис:4 service:4 называться endpoints дело endpoint:2 req:4 rep:2 лишь:2 type alias endpoint-ы мочь:2 неявно implicitly конвертировать:2 прозрачный httprequest:4 httpresponse:3 getuser postuser getallusers httpx serve _8081 request:3 являться:3 ключевой очевидно большой:2 часть без учёт:2 бизнес логика чтение:4 валидация:3 параметр:8 заниматься весь:2 future:3 образ:2 читать:6 результат помещаться очередь чтобы этап дополнительный future-трансформация правило:3 data-flow поэтому вернуть exception:2 никакой:2 дальнейший трансформация выполнить поведение крайне:2 удобно когда реальный работа невалиден title:5 обязательный:3 query-string:2 исключение:3 notpresent:2 парамер отсутствовать requiredparam:7 def:2 hello:2 name:10 new apply for:2 yield:2 предоставлять:3 набор встроить requestreader- различный информация:2 начинать заканчивать cookies requestreader-ы делиться группа required необязательный:2 optional ридер:5 firstname:4 fname:6 secondname:4 optionalparam:4 sname:5 monadic:3 flatmap applicative:2 syntax:2 выглядеть знакомый рекомендоваться накапливать ошибка:2 fail-fast природа монада только ниже:3 оба способ:3 the:2 style:2 monadicuser getorelse:3 applicate applicativeuser прочее отличный читаемый age:11 100 основа магия лежать implicit:4 decoderequest:3 type-class:2 нести получить конверсия:2 прочитать:2 notparsed поддерживаться float double поддержка:3 json:16 реализация:3 текущий:3 область:3 видимость:3 пользователь сериализовать формат body requiredbody:2 jackson:2 объект requestreader-а сильно упрощаться import:2 осуществляться should:4 shouldnot inline готовый:2 validationrule:2 при условие маленький 120:4 противный notvalid than:2 выше переписать лаконичный стиль композитор and:2 begreaterthan belessthan response:8 построение ответ:3 общий практика считаться конкретный соответствующий статус-кода created:3 has been plain text важный encoderesponse:5 способный любой значеий реализованный каждый поддерживать код интеграция стандартный модуль finch-json obj john application:2 расширить функционал responsebuilder-а добавить нужный encodeuser applciation bob заключение молодая проект:2 определённо серебряный пуля лишить критический недостаток разработчик эффективный задача над работать надеяться публикация отправной точка русскоговорить программист решить попробовать свой github блог дть guide gitter чат