'238445 |@words недавно прочитать пост udp:2 async:5 await:5 который:6 описание решение:4 несложный задача:5 опрос устройство один:8 клиент:3 помощь:3 действительно сокращать объесть код:9 сравнение ручной реализация асинхронный:8 вызов:5 другой:3 сторона создавать:2 много:2 проблема:5 синхронизация:3 конкурентный доступ данные обработка исключение:2 получить:4 очень:3 подверженный ошибка:4 первоначальный версия автор содержимый:2 неосвобождение ресурс можно:4 сделать простой:2 надёжный чем собственно метод:6 udpclient:7 receive:2 -async этот:2 реентерабить есть:5 если:4 уже ждать приход датаграмма:4 нельзя вызвать ещё раз:3 даже:2 выпасть:2 вполне ожидать поток:8 поэтому:3 нужно:2 писать:2 дополнительный синхронизировать действие:3 пользователь:2 состояние tasks parallel library иметь готовый:2 средство или:3 рука как:4 исходный:4 статья использовать:4 библиотека:2 вроде tpl:2 dataflow:3 увы тяжеловесный reactive:2 extensions:2 вместо описывать дать:4 последовательность:20 функция:3 для:7 создание:2 манипуляция:2 они позволять:4 работать:2 только:2 событие генерировать элемент:4 интерфейс:2 это:5 весь:2 программа описать:2 вид набор пример:2 кодадлить понадобиться проект добавить rx-main nuget написать:2 несколько:2 хелперов public:5 static:3 iobservable:5 udpreceiveresult:3 receiveobservable:2 this:4 client:9 return:5 receiveasync:2 toobservable:2 int:5 sendobservable:4 byte:4 msg:8 bytes:2 string:2 port:6 sendasync receivestream:8 observable:2 defer:2 repeat:2 два:2 хелперо превращать task метод-расширение:3 последний хелпереть показывать откладывать конструктор:2 параметр тот:2 появиться подписчик:7 повторять бесконечно вместе:2 бесконечный цикл:2 получение:3 сокет теперь отправка sendreceiveudpasync timeout:3 var:2 from:2 length:2 where:2 remoteendpoint:3 address tostring select buffer take timespan frommilliseconds да-да поддерживать:2 linq:2 выражение довольно тяжело понимание без знание быть:7 он:2 после результат:2 подписаться удовлетворять предикат вернуть буфер далее браться получиться:3 навешиваться тайм-аут самый важный:2 часть:2 определение publish:2 refcount:2 горячее:2 холодное:2 тёплый:2 последовательностикогда знать:2 температура появляться при:2 появление исчезать когда переставать существовать:3 возвращать такой:2 значит что:2 каждый:2 свой параллельно происходить начало решаться независимо например движение мышь выше превратить холодный горячий нести указать:2 порт вызывать send мы нужный промежуточный вариант должный:2 общий пока хотя называться создаваться подписка событиядлить тестирование также:3 сервер:2 idisposable listen func process:2 subscribe:2 вызываться задать конец стоить:2 обратить внимание вы надо чтобы построить основа заключение явный полностью безопасный обязательно изучить основный придумать применение принцип двойственность монада стандартный ienumerable ienumerator компактный мощный кроме javascript c++ java scala python ruby выложить github:2 com gandjustas udprxsample