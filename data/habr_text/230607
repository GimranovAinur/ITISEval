'230607 |@words впервые слышать:2 tornado:13 бояться асинхронность смотреть он:4 более полгода назад тогда посвящать этот:2 статья вы:2 подготовка писать:2 быть:8 третье питон если:2 установленный советовать воспользоваться:2 pyenv:2 кроме мы:2 понадобиться motor:7 асинхронный:9 драйвер mongodb:4 pip3 install импортировать необходимый модулиimport bson:3 import:2 from web:10 gen:5 ioloop:3 подключаться:3 gridfs:14 как:5 распределенный хранилище использовать:3 motorclient habr motorgridfs один:3 строка выбирать база:4 'habr далее:2 умолчание это:5 коллекция upload:2 handlerclass uploadhandler:4 requesthandler:3 coroutine:4 def:3 get:7 self:10 files:6 yield:8 find sort uploaddate list render 'upload html:4 files=files post:4 file:8 request:3 'file:2 gridin:3 new content:3 type=file type:2 write body:2 close redirect относледоваться теперь:5 переопределять метод:3 обработчик:4 соответствующий:2 http:2 запрос:5 декоратор позволять вместо:2 колбэковы генератор сточка визуально мало чем:2 отлечаться синхронный функциональный различие огромный случай произойти ожидание завершания есть пока дать думать сайт смочь заниматься обработка другой итак:2 получать:2 мета-информация последний загрузить файл:6 направлять шаблон:5 доставать отправить помощь форма отрисовать изображение:5 затем открыать gridfs-файл сохранять туда картинка:3 закрывать после делать редирект страница:2 для:3 отображение:2 обновить список:2 showimagehandler:5 нужно достать отобразить получить:2 class img:4 try gridout:4 objectid:2 except errors invalidid nofile raise httperror 404 set:3 header:2 'content-type 'content-length length stream:2 handler здесь:2 обрабатывать только хттп сначала уникальный автоматически сгенерировать при сохрания процесс возникать исключение некорректный или:2 отсутствовать показывать 404-ть устанавливать заголовок чтобы браузер:2 идентифицировать ответ отдавать тело роутинг:2 привязка наш url:7 создать экземпляр application:2 app imgs name='show:2 image:5 параметр:2 передавать описывать url-регулярка группа регулярка раз передаваться генерация урл запускать серверapp listen 8000 instance start результат можно:3 наблюдать localhost_8000 doctype form:3 action= method= enctype= multipart form-data input type= name= accept= onchange= javascript this submit recent uploads for reverse 'show href= src= style= max-width 50px end:2 весь:2 должный знакомый django jinja единственный отличие endforрезультат быстрый масшабировать свой суть написаный псевдо-синхронный стиль хостинг главный знаете устроить так уметь работать частность наверняка заметить узкий место действительно грузить память прежде записать наверное подумывать что что-то тип nginxhttpuploadmodule однако сделать:2 средство возможно следующий урок:2 cсылкикод ваш мнение понравиться стоить продолжать исправление пожелание