'249403 |@words пост речь пойти:2 написание:3 утилит:2 для:10 нагрузочный:2 тестирование:2 http:2 сервис:3 node:3 также:4 описание самый:2 инструмент:4 область он:3 использование предыстория выходной:2 нужно:2 быть:3 срочно провести наш:2 один:4 дело:2 отправиться ставить:2 яндекс танк:2 оказаться:3 что:4 парный прежний весь:10 заточить под debian google:2 рабочий:3 машина я мак виртуалка ради это:3 совсем:3 хотеться:2 поэтому:2 тестовый сервер:2 где:2 беда зависимость недостаточно память достукиваться админ рука большой:2 чесаться написать несложный:2 интересный так появиться stress:5 отговаривать вы:2 или jmeter если:3 нужный быстрый простой:2 поставил-запустить надеяться пригодиться почему во-первых асинхронность язык помочь мы:3 максимально упростить код:2 одновременный:2 выполнение запрос:7 ядро:3 во-вторых удобный встроить:3 cluster:4 воркер:4 канал:2 связь они:3 в-третьих http-сервер socket отчёт:2 браузер:3 расширяемость нерасширяемый мёртвый случай мочь:3 понадобиться кастомизация обработка ответ:2 удалённый стратегия:2 отправка агрегирование получить результат:2 рисование грасивый график:2 модуль:2 ваш конкретный который:2 решить назвать атакер:4 много можно:4 писать:2 сам:2 каждый состоять следующий dispatcher:5 коммуницировать воркеры:3 между:2 себя:3 репортёр reporter:4 анализировать:2 дать:2 формировать receiver:4 тело считать статистика frontend:2 рисовать:2 графика данный момент создать:2 только:2 step:5 поведение аналогично танковский достаточно большинство задача лог агрегированный вид архитектура омрачаться необходимость работать параллельный как:3 известно иметь тред при:3 запуск число начать вставать очередь увеличивать латенсь:2 сразу форкай количество общаться через json:5 сообщение:2 prototype:3 fork:3 function:9 var:9 self:5 this:30 pings:2 worker:4 ismaster:2 for numcpus i++ message:2 msg:4 data:10 parse:2 type:3 ===:4 ping:2 pings++ workers:4 length:3 поднять начинать:2 else:4 attack:6 masterhandler:2 push:2 тут process:6 send:3 stringify:2 taskindex undefined workerinstance run:3 логика призвать ровно распределить конструктор вызывать этот метод:2 параллельно всякий подготовительный init:2 async:2 parallel bind:4 next:6 итерировать таска:2 указанный конфига:4 task:6 tasks currenttask:2 console log ndone exit attacker:4 attackers:2 new:2 done currenttask++ вместе reporter' заправлять касаться текущий представлять обёртка вокруг requesttask request:6 jar:2 filecookiestore config cookiestore each arr handle result:6 pid:2 reqs:2 url:2 duration:2 logall report видно лежать:2 объект являться options одноимённый библиотека позволять использовать возможность использоваться tough-cookie-filestore позволить строить таск цепочка реквестовый ведь полноценный часто бывать проверить нагрузка закрытый часть помимо прочее без труд прокидывать сагрегировать куда угодный например клиент ждать chart answers++ object keys summary:2 answers:2 aggregated:3 logaggregate emit currentstep:3 забыть выставить webreport true перейти ссылка консоль смотреть расти увеличиваться rps установка запускgit clone https github com yarax npm:2 start:2 папка configs дефолтный файл реквеста гугл там свой запустить какnpm myconfigname рад кто-то статья полезный pull requests welcome