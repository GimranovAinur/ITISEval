'244091 |@words продолжение статья:4 копа дробный рассказать тестирование компонент:21 существовать много:2 информация юнит-тестирование bdd этот:3 быть:14 посвятить настройка:5 specflow:6 для:10 работа:4 unity:7 engine также:2 содержимый общий:5 рекомендация:2 создание тестировать:3 архитектура игра:8 компонентно-ориентировать подход правило разработка который:5 можно:2 легко:2 протестировать сформулировать так:2 что:3 мочь:2 видеть слышать только человек:3 должный:5 отдельный:5 дефолтной поведение:10 хороший:3 считать он:4 эталонный:2 забывать один:2 такой:2 образ внести корректировка свой реализация:2 core:2 gameplay жанр tower:3 defense некоторый компонента обращаться renderer:2 через getcomponent —этый ненужный зависимость:5 обязательный присутствие весь:3 визуализация указать:4 дефолтный значение поль это упростить сам:2 расширить функционал ввести игрок:3 чей состоять передача управление посредством устройство ввод теперь:2 начало:2 надо:4 нажать кнопка начать:2 после:2 выбрать:2 башня:2 постройка указание куда построить:2 когда начаться вот:2 вопрос:2 какой:3 нужный unit тест:7 проверять:3 спецификация:2 ответ разный количество сложность:2 проект:3 стоить:3 помнить игровой:3 объект:4 складываться я необходимый:3 оценить логика внутри если:3 она:2 допустить ошибка подстраховаться сделать:3 юнит-тест:5 другой:2 случай целое:2 подготовительный дополнение мы понадобиться:2 следующий unitytesttools:4 runner:6 nunit-тест разработчик среда редактор visual:2 studio:2 tools:2 бывший unityvs:2 плагин отладка specflowь unit-тест многие добавлять:2 непосредственно утяжелять сборка:14 лишний время:2 занять выделение набор включить финальный версия build добавление нужно:2 открыть решение:2 сгенерировать:2 добавить:4 новый тип библиотека:2 класс:2 наш пример:2 назвать towerdefensecore:4 unittests:2 важный:5 момент:3 являться references nunit:5 framework dll:8 assets:6 unittesting:2 editor:2 libs:2 unityengine:2 library:2 unityassemblies:2 assembly-csharp:2 решенияважный:2 копировать:2 локально:2 настроить:3 свойство:2 путь:2 вывод:2 директория:2 например:2 tests:2 написание исполняемый test:10 ничто отличаться обычный однако есть:3 несколько первое делать инстанциирование метод:2 gameobject:5 instantiate обязательно простой:2 damageapplicator:9 public:7 void:6 directdamage:5 var:9 new:6 100:3 assert:5 areequal:4 90f иметь никакой разрешаться awake:5 start onenable использовать:2 цель:2 вызывать принудительно hittable:15 deadondirectdamage componentsholder:6 зависеть addcomponent:7 damageaplicator инстанс потому вручную внедрить true:3 isdead:3 два проверка:3 coroutine:3 тут указывать maxtime:2 рассчитать выполнение оно или цикл while:2 дополнительный пройти 10000 begindps:3 наносить единица урон:2 каждый:2 сечь 100hp damageinflictor:2 target:3 dmger:3 запускать inflictdamage movenext симулировать thread sleep три сцена опция run scene собрать переключиться меню как увидеть появиться запуск создать specs:2 нея пакет install-package techtalk:2 packages lib net35 скопировать помимо steps feature:2 крип при получение creeplogic creep:14 alive:3 take:3 damage:3 and dead:4 scenario check given:2 when:2 then:2 шаг binding class creeplogicsteps private givencreepisalive whencreeptakedamage int dmg:2 thencreepisdead nunitframework отобразить название checkcreepisdead упоминать про способ автоматизировать без участие тема