'245889 |@words здесь быть:6 много стать универсальный lock-free:4 объект:17 однако:2 для:15 некоторый:3 частное случай:3 они излишний громоздкий мой как:2 раз такой:4 являться:2 требоваться:2 организовать односторонний передача:3 информация один:6 поток:24 другой главный:11 запускать рабочий:11 после:8 что:11 мочь:7 только:6 запросить он:8 остановка никак большой:2 управлять свой:2 очередь:16 уведомлять текущий:4 состояние:10 прогресс:2 выполнение:3 также:3 отсылать промежуточный:2 результат получаться:2 дать:5 главное:5 разумеется возможно:4 изобрести велосипед:2 или худой тот:2 глюк поэтому:2 комментарий критика очень приветствоваться наш представить вид:2 класс:6 при:10 это:11 обязать всегда:3 забирать храниться например важный:2 если:12 пропустить значение:7 получить последний актуальный:2 данный момент:2 реализация:2 мы:5 потребоваться:2 три экземпляр:2 разный:2 var:25 readitem:14 tlockfreeworkstate:16 currentitem:19 writeitem:13 идея:2 таков иметь:3 свободный доступ:2 когда:2 весь:3 сохранить выполняться операция:7 interlockedexchange:7 какой-то образ:2 уведомляться готовность новое мыть пример:4 использовать обычный:2 postmessage:3 обработчик уведомление:2 выполнять:6 свободно:2 читать:3 себя:2 пузырёк появляться далее всплывать через кстати придумать нормальный:2 название базовый структура назвать просто кто-то найтись хороший тут:3 есть нюанс обращаться любой время попеременно возвращать:3 предыдущий предотвратить помочь флажок:2 newest:13 запись:5 выставлять true:12 этот:5 оказываться начало проверять делать сразу сбрасывать false:9 посчитать безопасно поправить я право теперь:3 упрощённый:2 код:5 опустить привидение тип больший наглядность type:6 class:17 public:12 boolean:11 end:55 function:13 read:9 begin:41 then:23 interlockedexchangepointer:15 result:21 else:8 procedure:19 write:5 что-то подход схожий изначально:2 два ссылка:2 readqueue:27 tlockfreeworkqueue:29 writequeue:26 создаваться записываться:3 переменный:5 представлять кольцевой:2 буфер:3 следующий описание head:14 integer:13 tail:20 items:17 array:3 queuecapacity:14 tobject:9 где константа:2 нуль который:3 определять длина добавление:2 элемент:17 interlockedexchangecomparepointer:2 сравниваться nil:21 успех добавлять:2 пройти успешно увеличиваться:2 сбрасываться:2 достигнуть:2 оперировать так поток-писатель должный:3 уведомить появиться удаться означать заполнить:3 поздний начинать:2 цикл чтение:7 самый дело можно:4 люба извлечение:2 вызываться куда извлечь разобраться случаем переполнение:2 новый:3 вполне создать продолжить писать чтобы найти поток-читатель передать добавить:4 дополнительный пол:3 nextqueue:14 создавать newwritequeue:18 записывать нея конец сохранять:2 уже ссылаться нужно:3 обработка пустой необходимый дополнительно проверить:2 возвращаться newreadqueue:10 удалять присваивать вот addqueueitem:4 item:27 interlockedcompareexchangepointer:2 added:2 successfully:4 inc:8 full:2 create:16 new:6 chained:2 queue:19 check:6 single-item:2 extractqueueitem:4 repeat:3 this:2 next:2 available:2 assigned:9 free:12 exit:4 until:3 extracted:2 несколько перестраховаться уверенный:2 поль вообще:2 применять безопасный прямой тестовый:3 причесать вместе простенький консольный посмотреть под спойлер примерprogram lockfreetest apptype console:2 res uses sysutils classes windows messages work:5 thread:9 state:7 protected:3 fnewest:3 property:3 pointer:11 const:3 small value for:2 test:4 purposes tlockfreeworkqueueitems:2 access:2 from:3 main:9 only:4 destructor:6 destroy:7 override:4 add:4 static:2 extract:3 non-extracted exists inherited:4 n't empty not:5 mainnotify:3 user tworkthreadstate:10 progress:7 tworkthreadqueueitem:9 itemdata:3 tworkthread:14 tthread fmainhandle:4 thandle:4 fmainnotified:3 fields:3 fstateread:5 fstatecurrent:5 fstatewrite:6 fqueueread:5 fqueuewrite:3 debug:2 fiels fdebugreadqueue:5 execute:3 setstate:3 notifymain:4 constructor:4 createsuspended:3 getstate:3 notificationprocessed:3 mainhandle objects:2 always may have reference testqueuecounttoflush:3 progressindex:6 testqueuecount:5 while:2 terminated send current:2 all object initialization required emulate calculation sleep 500 put intermediate allow reading:2 application tmain:7 fhandle:4 fthread:10 wndproc:3 message:9 tmessage:2 run:3 handle:5 allocatehwnd start writeln:8 'work:3 started 'stopping stopped deallocatehwnd msg:6 show allowed 'read try:3 'queue finally:2 defwindowproc wparam lparam tmsg 'start loop ctrl+c break:3 case:2 getmessage translatemessage dispatchmessage event:4 handler consoleeventproc:2 ctrltype:2 dword bool stdcall ctrl:3 close quit ifdef reportmemoryleaksonshutdown endif setconsolectrlhandler freeandnil except exception classname ситуация появление возможность извлекаться тестирование запрещать метод введно разрешать сожаление слишком простой генерировать коллизия между переключение происходить внутри служебный функция узкий место алгоритм превратить