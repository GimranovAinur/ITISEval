'240565 |@words после:3 прочтение книга test:43 driven development for:2 embedded начать:2 знакомство мир юнит-тестирование фреймворка:4 cpputest последний:2 очередь потому что:4 немой:2 свеженаписать тест:27 регистрироваться запускаться самостоятельно это:11 приходиться платить использование c++ динамический выделение память где-то глубина:2 мочь:3 быть:10 можно:6 как-то:4 простой:4 совсем недавно узнать минималистичный minunit:2 который:2 умещаться:2 всего:2 строчка:2 привести здесь:2 для:15 наглядность define:14 assert:2 message:11 return:9 while:3 run:11 char:11 tests:10 run++:3 extern:3 int:2 просто:3 красиво при:2 написание:2 выглядеть:2 вот:4 так:2 static:5 foo:3 error сожаление:2 когда попытаться фреймворок:2 воспользоваться:2 очень:2 быстро понять я:7 ужасно лень рука:2 регистрировать каждый:6 ведь нужно:5 заводить заголовочный файл:9 этот:4 прописывать:3 объявление:2 потом:2 идти main:4 вызов посмотреть другой:2 написать:2 чистый:2 почти везде тоже самый:2 качество альтернатива предлагаться отдельный программа сканировать исходник генерировать:2 код:3 запуск:6 уверенность вселить пост где регистрация:2 использоваться линкер:2 привязываться специфичный компилятор:2 атрибут хотеться:2 насколько известно невозможно сделать:3 полноценный как:3 насчёт полуавтоматический идея оформиться следующий:4 образ:2 модуль:2 писаться:3 module весь:6 данный образовать группа:5 магический функция:8 только:4 отдельность сводиться задача получить список помощь:2 препроцессор:4 например:2 если:2 называться однообразно:2 служебный имя:4 вполне:3 какой:2 угодный лишь заголовок внятный значит функция-тест причём единый шаблон umba:44 counter:14 boost:7 increment:2 update token:2 token2:2 description:2 void:7 признаться:2 честно:2 использовать:3 один:2 раз:3 жизнь душа поразить мощь теперь:3 писать:3 simple получаться uint8:2 check:2 maths broke include инклуда:2 счётчик:2 проинкрементироваться сгенерировать:3 остаться запускать создаваться массив:3 указатель:3 заполняться цикл вызывать обязательно конец чтобы значение равняться номер генерирование сперва пойти путь helper-файл такой вид:2 local:9 array:8 umbatest:3 elif принцип обойтись несколько:2 сотня тогда boost'a нужный preprocessor slot hpp почему продолжить decl:2 text:2 repeat два могущество они скрытый добавлять тривиальный group:8 groupname:6 uint32 i=0 i++ вуаля любой количество одинаково simplegroup:2 all:3 result:3 printf:4 else passed run-1 довольный результат механический действие заметно маленький упомянуть макрос 40-50 строка большой чем гораздо менее очевидно целиком отсутствовать уйма функционал больший довестись что-то:3 помимо проверка true выкидываться он полезный вроде несложно вдруг захотеться выяснить изобрести новое или подобный трюк уже пользоваться много год сей улучшить нравиться необходимость какой-то странный реализация найти count мой поддерживать стоить самодельный фреймворк продакшен черта побрать работать даже stackoverflow ответ соответствующий вопрос являться magic