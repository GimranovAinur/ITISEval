'233011 |@words jelastic:34 cloud:3 api:23 позволять автоматизировать:3 действие:3 для:15 обеспечение жизненный:2 цикл:2 приложение:4 расширить функциональность платформа:2 связывать jelatic другой:4 сервис использовать:10 мочь:8 программно создавать:2 окружение:13 разворачивать:2 выполнять задача который:7 возможно сделать панель управление ограничиваться они следовать rest:4 принцип взаимодействие происходить через:2 http:3 протокол:3 преимущество такой:4 подход широкий расширяемость практически любой язык программирование этот:3 статья:2 узнать как:4 client:5 library:5 java:8 облачный:2 хостинг:2 infobox:8 конец 300:2 рубль:2 счёт:2 подарок получить:5 можно:2 только один:2 раз запрос:15 весь:5 метод:4 get:5 или:2 post:2 производиться адрес:2 https:5 app:6 jelasticloud:5 com:13 документация:4 указанный:4 hoster-api-host дать:3 быть:10 передать строка:2 после:3 символ:2 при использование:4 get–метод тело post-запрос случай get–запрос параметр:10 должный:7 percent encoding:2 url:5 помнить про ограничение:2 длина:2 2048 поэтому рекомендовать получение информация просто помещаться изменение:2 создание:5 файл конфигурация:2 образ:2 ограничить длинный более:2 релевантный спецификация каждый:3 содержимый:3 набор:2 обязательный:2 некоторый функция:5 есть дополнительный описать:2 включать appid:11 обощначать запросить если:3 связать системный:2 значение:4 1dd8d191d38fff45e62564fcf67fdcd6:4 текстовый представить:2 кодировка:2 utf-8:2 последовательность важный ответ:3 даваться формат json:4 пример:4 результат java-библиотека начало автоматизация требовать процесс необходимый:5 зарегистрироваться также:2 скачать добавить:3 classpath maven следующий:8 зависимость pom xml dependency:2 groupid:2 artifactid:2 jelastic-public-j2se version:2 вызов:5 люба вы нужно пройти аутентификация:3 это:4 отвечать session:12 идентифицировать пользователь сессия:5 начинаться users:6 authentication:8 signin:6 appid=:2 string:19 login= password= гдеappid login:3 password:9 учётный запись ваш:6 аккаунт:3 выполнить:2 завершение работа вызвать signout:4 session= помощь:2 различный:2 например изменять статус удалять перезагружать хост давать посмотреть создать:3 выбрать топология:2 настроить он полный версия доступный:4 раздел samples:2 здесь шаг:2 шагом рассмотреть основной пункт определить новый:2 публичный класс createenviroment войти блок:3 private:12 final:12 static:15 platform:10 hoster:4 user:11 email:6 env:8 name:4 test-api-environment-:2 new:15 random:3 nextint:2 100:2 где логин:3 пароль:2 затем настрой выше public:3 void:2 main:2 args:2 system:22 out:16 println:16 authenticate:3 authenticationresponse:13 authenticationservice:5 response:11 isok:6 exit:6 getresult:6 getsession:2 уникальный она использоваться выполнение операция пользовательский оставаться действительный список:2 движковый engine:5 type:6 ruby:2 php:3 python getting:4 list:6 engines:3 arrayresponse:19 environmentservice:9 getenginelist:4 шаблон:4 нода соответствие template вид all:4 включая нативный картридж:2 native:3 умолчание cartridge:2 собственный компания templates:4 gettemplates:4 false:8 определимый настройка новое:2 сервер оно детально манифест определение почитать тут jsonobject:17 put:32 ishaenabled:2 php5:2 shortdomain:2 apachenode:4 nodetype:6 apache2:2 extip:4 count:2 fixedcloudlets:4 flexiblecloudlets:4 mysqlnode:4 mysql5:2 memcachednode:4 memcached:2 jsonarray:5 nodes:4 наконец инициировать creating:2 environment:7 scriptevalresponse:7 createenvironment:4 createenv:2 tostring:4 наш:2 успешно найти package playground import:8 development:2 interfaces org:2 util class setserverurl:2 started you need specify the:10 and your account:2 order after this:2 unique will created for:2 performing required:3 actions within further calling functions should performed with:2 received value valid until method called available:3 etc node according specified create settings попробовать сейчас оценить удобство разработка эксперимент ещё получать стать начисление бонус отправить trukhinyuri infoboxcloud