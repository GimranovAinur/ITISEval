'233555 |@words добрый вечер господин читатель:2 сегодня я:2 хотеться пролить немного:2 свет такой:2 замечательный часть scala core под:2 название future:38 собственно существовать документация официальный сайт там идти объяснение как:10 работать он:3 при:3 помощь event driven подход это:9 являться также:2 монада:4 дать статья:3 хотеть привести пример:5 растолковать надо:3 использовать:4 ключ точнее свой видение вопрос:2 весь:4 желающий ознакомиться просить:2 кат что:12 здесь быть:23 этот:6 собираться рассказывать про:4 callback'ь promise' достигаться отличный модель конкуренция или ещё:2 дух писать:3 раз функция:9 который:7 давать:2 поведение:2 map:16 итак:4 обратиться api def:12 implicit:7 executor:7 executioncontext:7 делать удачный исполнение:2 выполнить передать:3 нея:2 результат:11 опять запаковать:2 есть:4 println:7 конечно:2 итог код:2 вывести:4 экран:3 ожидаться если:2 failure исполнить два:3 выбросить:2 исключение:4 ничто для:2 стоить последовательный операция:3 требовать предыдущий:2 flatmap:12 искусить понимать мочь:2 внутри дело:3 исправлять брать:3 возвращать:4 другой:2 int:2 число случай:5 неудачный следовать цепочный for:7 лететь гневно синтаксический конструкция знать:2 рассказать глупо коль:2 рассмотреть:4 нужно использование:3 for-comprehensions некоторый плохой хороший:5 плохо:2 longcomputations1:5 longcomputations2:5 longcomputations3:5 yield:4 val:5 оба одинаковый почему самый:2 ответ простой:2 развернуться вызвать:2 последовательно параллельно вариант решать:2 проблема:3 способ поэтому только:2 лишь zipdef zip:6 that ранее несколько одновременно упаковывать tuple2 вот:2 наш сверху записаться теперь case:5 лично:2 мой куда чистый filter:2 withfilterdef boolean:2 final withfilter тут:3 логично тестировать оно:2 подходить далёкий failed nosuchelementexception recover:5 recoverwith:2 мы:3 исполняться асинхронный:2 нужный контроль partialfunction:2 throwable:2 исключительный ситуация частичный один:2 должный:5 значение друг обработать вывестись foreach:4 суть:2 представлять себя паковаться новый просто возвращаться unit:2 совсем корректный написать избежать лишний создание более общий иметь double:9 выполнение:2 конец стандартный поток вывод известно возвратить поехать exception:2 var res:2 предпочитать записать послесловие постараться описать:2 монадный считать удаться например класс-helper очень интересный важный уже материал комментарий чем допустить упущение спасибо внимание