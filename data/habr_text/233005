'233005 |@words выход:5 android:4 api:4 google привнести долгожданный компонент под:2 название mediacodec:18 класс:4 быть:14 открытый публика для:11 нормальный использование:5 поддержка система:4 требоваться минимальный уровень материал:2 рассчитать опытный разработчик:2 попробовать объяснить показать пример:5 кодирование:8 видео:9 лёт surface:16 как:11 вход:2 поток:9 дать:27 если:11 интересно просить кат что:9 такой:2 официальный документация гласить class:3 can used access low-level media codec:4 encoder decoder components или:5 мочь:8 использовать:6 доступ:2 низко-уровневый медиа кодек:12 кодер:14 декодеруть принцип это:4 декодер:9 который:8 манипулировать:2 буфер:21 смотреть формат:5 h264:4 video:5 avc:5 суть:4 хранить:3 nal кадр:4 зачем нужный большинство случай:2 videoview mediaplayer:2 surfaceview:2 вполне достаточно только:3 речь зайти создание:3 дальнейший передача:3 куда-либо мы:4 так:5 много вариант:2 тут:2 помочь кодировать:4 давать:4 возможность:2 создать:5 объект:2 принятие разделить:2 логика кодирвоание три:3 этап:4 подготовка:2 цикл:7 освобождение:5 ресурс:6 процесс:10 простой обработка потребоваться:2 отдельный представлять непосредственно worker:2 extends:2 thread:3 bufferinfo:6 mbufferinfo:8 информация текущий mencoder:12 msurface:6 volatile:2 boolean:5 mrunning:11 final long:2 mtimeoutusec:3 блокировка ожидание доступный:9 public:6 new:3 10000l void:9 setrunning:2 running:4 override:3 run:3 prepare:2 try:5 while:3 encode:3 finally:3 release:7 прежде чем приступить описать конфигурация:6 сам:2 получить:2 ввод:3 int:14 width:4 1280 ширина:2 height:4 720 высота:2 colorformat:2 mediacodecinfo codeccapabilities color:2 formatsurface цвет videobitrate:2 3000000 битрейт bps битый секунда:2 videoframepersecond:2 fps iframeinterval:2 i-frame:2 интервал mediaformat:8 format:10 createvideoformat:2 setinteger:4 key:4 bit rate:2 frame:4 interval createencoderbytype configure:4 null:5 flag:12 конфигурировать:2 createinputsurface получать:2 start:2 запускать кодированияvoid signalendofinputstream сообщить:2 конец:3 массив:2 bytebuffer:4 outputbuffers:3 getoutputbuffers:2 for статус:2 являться:5 код возврат позитивный число индекс:3 status:6 dequeueoutputbuffer:2 info:7 again later нет пробовать поздний break:3 выходить закончить else:4 output buffers changed менять просто:5 ничто делать:2 data:6 position offset:4 limit size:6 ограничивать что-то releaseoutputbuffer:2 false:3 flags:5 buffer:14 end:6 stream:6 передать:3 сеть:3 записать файл:2 этот:2 декодировать:2 чтобы:2 изображение:5 важный:4 заметить:2 иметь:3 пол содержимый:3 флаг:9 config:3 sync:2 рассмотреть каждый сигнализировать:3 тот:3 один:3 должный:2 данный:4 наш:5 csd-0:5 время:2 декодирование:8 при:3 достигнуть:2 уверенный счёт контролировать протокол:2 rtp:2 весь:2 останавливать освобождать системный stop:2 далёкий возможный:2 минимум путь camera opengl canvas:6 рендёр:2 возможно подобный основа renderer draw:3 lockcanvas рисовать канваса return:2 true:2 isvalid unlockcanvasandpost несколько ещё интересный момент parcelable через binder другой образ ваш находиться когда друг схожий:3 четыре часть сэмпнуть:2 опустить деталь архитектура критичный иначе:2 невозможно поступать synchronized csd0:2 mconfigured:5 знать:2 готовый:4 throw illegalstateexception создавать:2 передавать:4 setbytebuffer mdecoder:10 createdecoderbytype обязать какой нужно выводить описанный ранее необходимый:4 запрашивать decodesample byte presentationtimeus:2 вызов блокировать index:8 dequeueinputbuffer mtimeoutus:2 getinputbuffers clear обязательно сбросить позиция размер:2 put сообщать доступность queueinputbuffer учесть сэмпл передаваться последовательно артифакт вывод:2 известный включать себя запрос можно он вернуть желать рендерить переиспользовать нулевой рендерим заканчивать работа спать sleep catch interruptedexception ignore довольно таки жеvoid итог надеяться сильно трудный понимание хороший унифицировать медия различный устройство